name: Haskell CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7", "9.2.2"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Set cache version
      run: echo "CACHE_VERSION=pu4Aevoo" >> $GITHUB_ENV

    - name: "Setup Haskell"
      uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: 3.6.2.0

    - uses: actions/checkout@v2

    - name: "Configure cabal.project.local"
      run: |
        cat ./.github/workflows/cabal.project.local > ./cabal.project.local
        cat ./cabal.project.local

    - name: Record dependencies
      id: record-deps
      run: |
        cabal build all --dry-run
        cat dist-newstyle/cache/plan.json | jq -r '."install-plan"[].id' | sort | uniq > dependencies.txt
        echo "::set-output name=weeknum::$(/bin/date -u "+%W")"

    - uses: actions/cache@v3
      name: "Cache cabal store"
      with:
        path: ${{ runner.os == 'Windows' && steps.win-setup-haskell.outputs.cabal-store || steps.setup-haskell.outputs.cabal-store }}
        key: cache-dependencies-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('dependencies.txt') }}
        restore-keys: cache-dependencies-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}

    - uses: actions/cache@v3
      name: "Cache `dist-newstyle`"
      with:
        path: |
          dist-newstyle
          !dist-newstyle/**/.git
        key: cache-dist-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-${{ steps.record-deps.outputs.weeknum }}
        restore-keys: cache-dist-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}

    - name: Build dependencies
      run: cabal build --only-dependencies all

    - name: Build projects [build]
      run: cabal build all

    - name: io-classes [test]
      run: cabal run io-classes:test

    - name: io-sim [test]
      run: cabal run io-sim:test

  stylish-haskell:
    runs-on: ubuntu-22.04

    steps:
    - name: Set cache version
      run: |
        echo "CACHE_VERSION=hi5eTh3A" >> $GITHUB_ENV
        echo "STYLISH_HASKELL_VERSION=0.13.0.0" >> $GITHUB_ENV

    - name: "Install build environment (apt-get)"
      run: |
        sudo apt-get update
        sudo apt-get -y install fd-find

    - name: "Setup Haskell"
      uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: 8.10.7
        cabal-version: 3.6.2.0

    - name: "Setup cabal bin path"
      run: |
        echo "$HOME/.cabal/bin" >> $GITHUB_PATH

    - uses: actions/cache@v3
      name: "Cache cabal store"
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: cache-dependencies-${{ env.CACHE_VERSION }}

    - uses: actions/cache@v3
      name: "Cache `stylish-haskell`"
      with:
        path: ~/.cabal/bin/stylish-haskell
        key: cabal-path-${{ env.STYLISH_HASKELL_VERSION }}

    # Install stylish-haskell unless the right version is already available
    # from the cache
    - name: "Install `stylish-haskell`"
      run: |
        if [[ -x $(which stylish-haskell) && $(stylish-haskell --version) == "stylish-haskell ${{ env.STYLISH_HASKELL_VERSION }}" ]];
        then
          echo "Using cached `stylish-haskell`"
        else
          cabal install stylish-haskell-${{ env.STYLISH_HASKELL_VERSION }}
        fi

    - name: "`stylish-haskell` version"
      run: |
        which stylish-haskell
        stylish-haskell --version

    - uses: actions/checkout@v2

    - name: "Run `stylish-haskell`"
      run: |
        ./scripts/check-stylish.sh
        git diff --exit-code
